[tool.poetry]
name = "surfer"
version = "0.0.1"
description = "Autonomous web browsing agent"
authors = ["Fangyuan <fangyuan.yu@temus.com>", "Aaron <aaron.lim@temus.com"]

[tool.poetry.dependencies]
python = "^3.11"
langchain = "^0.2.12"
langchainhub = "^0.1.21"
langgraph = "^0.2.3"
langsmith = "^0.1.99"
langchain-openai = "^0.1.21"
playwright = "^1.45.1"
ipython = "^8.26.0"
# diart = "^0.9.1"
numpy = "^1.0.0"
python-dotenv = "^1.0.1"
websockets = "^12.0"
groq = "^0.9.0"
anthropic = "^0.33.0"
phidata = "^2.4.29"
grandalf = "^0.8"
matplotlib = "^3.9.1.post1"
pytest = "^7.4.3"
mypy = "^1.8.0"
ruff = "^0.2.2"
typer = "^0.12.3"
tqdm = "^4.66.5"
types-PyYAML = "^6.0.12.20240808"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
